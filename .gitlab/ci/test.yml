test:pre-commit:
    stage: test
    needs: ["build:docker-images"]
    interruptible: true
    image: docker
    variables:
        REGISTRY: "registry.gitlab.com/oly-exams/exam_tools"
    before_script: |
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    script: |
        docker run ${REGISTRY}/pre-commit:${CI_COMMIT_SHA}-untested

test:pytest:
    stage: test
    needs: ["build:docker-images"]
    interruptible: true
    image: docker
    variables:
        REGISTRY: "registry.gitlab.com/oly-exams/exam_tools"
    before_script: |
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    script: |
        docker run ${REGISTRY}/pytest:${CI_COMMIT_SHA}-untested

test:django-server:
    stage: test
    needs: ["build:docker-images"]
    interruptible: true
    image: docker
    variables:
        REGISTRY: "registry.gitlab.com/oly-exams/exam_tools"
    before_script: |
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    script: |
        docker run ${REGISTRY}/django-server-test:${CI_COMMIT_SHA}-untested


test:docker-compose-a-dev:
    stage: test
    needs: []
    interruptible: true
    image: docker
    variables:
        REGISTRY: "registry.gitlab.com/oly-exams/exam_tools"
    before_script: |
        docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    script: |
        COMPOSE_BAKE=true docker compose -f docker/docker-compose-a-dev.yml up --build --wait
        docker compose -f docker/docker-compose-a-dev.yml down --volumes

# test:testing-cypress-batch-1:
#     extends: .test:pull_and_run
#     variables:
#         ALL_SERVICE_NAME: django-server testing-cypress
#         OVERWRITE_COMPOSE: $DOCKER_DIR/overwrite/testing-cypress.yml $DOCKER_DIR/overwrite/testing-cypress-batch-1.yml
#     after_script: &batch_after
#         # copying makes the folderstructure look nicer on gitlab
#         - mkdir $CI_PROJECT_DIR/screenshots
#         - cp -r $CI_PROJECT_DIR/e2e/cypress/screenshots/* $CI_PROJECT_DIR/screenshots
#         # videos are not used at the moment
#         - mkdir $CI_PROJECT_DIR/videos
#         - cp -r e2e/cypress/videos/* $CI_PROJECT_DIR/videos
#     artifacts: &batch_artifacts
#         when: always
#         paths:
#             - $CI_PROJECT_DIR/videos
#             - $CI_PROJECT_DIR/screenshots
#         reports:
#             junit: $CI_PROJECT_DIR/e2e/cypress/reports/*.xml

# test:testing-cypress-batch-2:
#     extends: .test:pull_and_run
#     variables:
#         ALL_SERVICE_NAME: django-server testing-cypress
#         OVERWRITE_COMPOSE: $DOCKER_DIR/overwrite/testing-cypress.yml $DOCKER_DIR/overwrite/testing-cypress-batch-2.yml
#     after_script: *batch_after
#     artifacts:
#         <<: *batch_artifacts

# test:testing-cypress-batch-3:
#     extends: .test:pull_and_run
#     variables:
#         ALL_SERVICE_NAME: django-server testing-cypress
#         OVERWRITE_COMPOSE: $DOCKER_DIR/overwrite/testing-cypress.yml $DOCKER_DIR/overwrite/testing-cypress-batch-3.yml
#     after_script: *batch_after
#     artifacts:
#         <<: *batch_artifacts

# test:testing-cypress-batch-4:
#     extends: .test:pull_and_run
#     variables:
#         ALL_SERVICE_NAME: django-server testing-cypress
#         OVERWRITE_COMPOSE: $DOCKER_DIR/overwrite/testing-cypress.yml $DOCKER_DIR/overwrite/testing-cypress-batch-4_updated.yml
#     after_script: *batch_after
#     artifacts:
#         <<: *batch_artifacts

# test:testing-pdf-compilation:
#     extends: .test:pull_and_run
#     variables:
#         ALL_SERVICE_NAME: django-server postgres rabbitmq celery-worker testing-cypress
#         OVERWRITE_COMPOSE: $DOCKER_DIR/overwrite/a-dev.yml $DOCKER_DIR/overwrite/testing-pdf-compilation.yml
#     after_script:
#         # copying makes the folderstructure look nicer on gitlab
#         - mkdir $CI_PROJECT_DIR/screenshots
#         - mkdir $CI_PROJECT_DIR/pdfs
#         - cp -r $CI_PROJECT_DIR/e2e/cypress/pdfs/* $CI_PROJECT_DIR/pdfs
#         - cp -r $CI_PROJECT_DIR/e2e/cypress/screenshots/* $CI_PROJECT_DIR/screenshots
#     artifacts:
#         when: always
#         paths:
#             - $CI_PROJECT_DIR/screenshots
#             - $CI_PROJECT_DIR/pdfs
#         reports:
#             junit: $CI_PROJECT_DIR/e2e/cypress/reports/*.xml

test:testing-ibo-data:
    extends: .test:pull_and_run
    needs: [
        "build:django-server",
        "build:celery-worker",
        "build:testing-cypress",
    ]
    variables:
        ALL_SERVICE_NAME: django-server postgres rabbitmq celery-worker testing-cypress
        OVERWRITE_COMPOSE: $DOCKER_DIR/overwrite/a-dev.yml $DOCKER_DIR/overwrite/testing-ibo-data.yml
    after_script:
        # copying makes the folderstructure look nicer on gitlab
        - mkdir $CI_PROJECT_DIR/screenshots
        - mkdir $CI_PROJECT_DIR/pdfs
        - cp -r $CI_PROJECT_DIR/e2e/cypress/pdfs/* $CI_PROJECT_DIR/pdfs
        - cp -r $CI_PROJECT_DIR/e2e/cypress/screenshots/* $CI_PROJECT_DIR/screenshots
    artifacts:
        when: always
        paths:
            - $CI_PROJECT_DIR/screenshots
            - $CI_PROJECT_DIR/pdfs
        reports:
            junit: $CI_PROJECT_DIR/e2e/cypress/reports/*.xml
