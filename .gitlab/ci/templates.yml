.build:build_cached_push:
    stage: build
    # build will not be spawned every time, dont interrupt
    interruptible: false
    script:
        # I cannot build this variable in gitlab, since they dont allow nested $
        - IMG="$PROJ_REG/$IMG_NAME:$SERVICE_NAME"
        # this is the recommended way to reuse layers
        # (https://docs.gitlab.com/ee/user/packages/container_registry/index.html#using-a-docker-in-docker-image-from-your-container-registry)
        - docker pull $IMG || true
        - docker tag $IMG $SERVICE_NAME || true
        - docker-compose -f docker/$SERVICE_NAME/docker-compose.yml build --pull $SERVICE_NAME
        - docker tag $SERVICE_NAME $IMG
        - docker push $IMG


.test:pull_and_run:
    stage: test
    #if we push faster than CI runs, kill old pipeline jobs
    interruptible: true
    variables:
        CMD: {}
    script:
        - IMG="$PROJ_REG/$IMG_NAME:$SERVICE_NAME"
        - docker pull $IMG
        - docker tag $IMG $SERVICE_NAME
        - docker-compose -f docker/$SERVICE_NAME/docker-compose.yml up $SERVICE_NAME $CMD

.test:pull_and_run2:
    stage: test
    #if we push faster than CI runs, kill old pipeline jobs
    interruptible: true
    variables:
    script:
        - IMG1="$PROJ_REG/$IMG_NAME:$SERVICE_NAME1"
        - docker pull $IMG1
        - docker tag $IMG1 $SERVICE_NAME1
        - IMG2="$PROJ_REG/$IMG_NAME:$SERVICE_NAME2"
        - docker pull $IMG2
        - docker tag $IMG2 $SERVICE_NAME2
        - docker-compose -f docker/$SERVICE_NAME1/docker-compose.yml -f docker/$SERVICE_NAME2/docker-compose.yml up $SERVICE_NAME1 $SERVICE_NAME2
