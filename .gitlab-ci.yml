image: docker:latest
services:
- docker:dind

stages:
- build
- test
- release
- deploy

variables:
  CONTAINER_TEST_IMAGE: registry.gitlab.com/oly-exams/exam_tools/master-test:$CI_COMMIT_REF_NAME
  CONTAINER_TEST_IMAGE_CYPRESS: registry.gitlab.com/oly-exams/exam_tools/master-test:CYPRESS_$CI_COMMIT_REF_NAME
  CONTAINER_TEST_IMAGE_DJANGO: registry.gitlab.com/oly-exams/exam_tools/master-test:DJANGO_$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: registry.gitlab.com/oly-exams/exam_tools/master:latest
  DOCKER_IMAGE_NAME: $CI_JOB_ID

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com

build:
  stage: build
  script:
    - docker build --pull -f docker/Dockerfile.master -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

test_cypress:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker build --pull -f docker/Dockerfile.testing_cypress --build-arg TEST_IMAGE=$CONTAINER_TEST_IMAGE -t $CONTAINER_TEST_IMAGE_CYPRESS .
    - docker run --name $DOCKER_IMAGE_NAME $CONTAINER_TEST_IMAGE_CYPRESS
    - docker cp $DOCKER_IMAGE_NAME:/app/reports $CI_PROJECT_DIR/junitreports
    - docker cp $DOCKER_IMAGE_NAME:/app/cypress/screenshots $CI_PROJECT_DIR/cy_screenshots
    - docker cp $DOCKER_IMAGE_NAME:/app/cypress/videos $CI_PROJECT_DIR/cy_videos
    - docker push $CONTAINER_TEST_IMAGE_CYPRESS
  artifacts:
    paths:
      - $CI_PROJECT_DIR/cy_screenshots
      - $CI_PROJECT_DIR/cy_videos
    reports:
      junit: $CI_PROJECT_DIR/junitreports/*.xml

test_django_unittest:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker build --pull -f docker/Dockerfile.testing_django --build-arg TEST_IMAGE=$CONTAINER_TEST_IMAGE -t $CONTAINER_TEST_IMAGE_DJANGO .
    - docker run --name $DOCKER_IMAGE_NAME $CONTAINER_TEST_IMAGE_DJANGO
    - docker cp $DOCKER_IMAGE_NAME:/app/unittest_reports $CI_PROJECT_DIR/unittest_reports
    - docker push $CONTAINER_TEST_IMAGE_DJANGO
  artifacts:
    reports:
      junit: $CI_PROJECT_DIR/unittest_reports/*.xml
# test1:
#   stage: test
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker run $CONTAINER_TEST_IMAGE /script/to/run/tests
# 
# test2:
#   stage: test
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker run $CONTAINER_TEST_IMAGE /script/to/run/another/test

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master
