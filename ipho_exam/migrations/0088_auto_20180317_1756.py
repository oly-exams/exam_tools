# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import ipho_exam.models


class Migration(migrations.Migration):

    dependencies = [
        ('ipho_exam', '0087_exam_moderation_active'),
    ]

    operations = [
        migrations.AlterField(
            model_name='document',
            name='barcode_base',
            field=models.TextField(help_text='Common base barcode on all pages'),
        ),
        migrations.AlterField(
            model_name='document',
            name='barcode_num_pages',
            field=models.IntegerField(default=0, help_text='Number of pages with a barcode'),
        ),
        migrations.AlterField(
            model_name='document',
            name='exam',
            field=models.ForeignKey(help_text='Exam', to='ipho_exam.Exam'),
        ),
        migrations.AlterField(
            model_name='document',
            name='extra_num_pages',
            field=models.IntegerField(default=0, help_text='Number of additional pages with barcode (not in the handouts)'),
        ),
        migrations.AlterField(
            model_name='document',
            name='file',
            field=models.FileField(blank=True, help_text='Exam handouts', upload_to=ipho_exam.models.exam_prints_filename),
        ),
        migrations.AlterField(
            model_name='document',
            name='num_pages',
            field=models.IntegerField(default=0, help_text='Number of pages of the handouts'),
        ),
        migrations.AlterField(
            model_name='document',
            name='position',
            field=models.IntegerField(help_text='Question grouping position, e.g. 0 for cover sheet / instructions, 1 for the first question, etc'),
        ),
        migrations.AlterField(
            model_name='document',
            name='scan_file',
            field=models.FileField(blank=True, help_text='Scanned results. The file is show to the delegation and, if possible, it will contain only the pages with barcode.', upload_to=ipho_exam.models.exam_scans_filename),
        ),
        migrations.AlterField(
            model_name='document',
            name='scan_file_orig',
            field=models.FileField(blank=True, help_text='Original scanned document without page extractions', upload_to=ipho_exam.models.exam_scans_orig_filename),
        ),
        migrations.AlterField(
            model_name='document',
            name='scan_msg',
            field=models.TextField(blank=True, null=True, help_text='Warning messages generated by the barcode extractor'),
        ),
        migrations.AlterField(
            model_name='document',
            name='scan_status',
            field=models.CharField(max_length=10, blank=True, null=True, choices=[('S', 'Success'), ('W', 'Warning'), ('M', 'Missing pages')], help_text='Status of the scanned document. S - Success, W - Warning, M - Missing pages'),
        ),
        migrations.AlterField(
            model_name='document',
            name='student',
            field=models.ForeignKey(help_text='Student', to='ipho_core.Student'),
        ),
        migrations.AlterField(
            model_name='exam',
            name='active',
            field=models.BooleanField(default=True, help_text='Only active exams are editable.'),
        ),
        migrations.AlterField(
            model_name='exam',
            name='hidden',
            field=models.BooleanField(default=False, help_text='Is the exam hidden for the delegations?'),
        ),
        migrations.AlterField(
            model_name='exam',
            name='marking_active',
            field=models.BooleanField(default=False, help_text='Allow marking submission from delegations.'),
        ),
        migrations.AlterField(
            model_name='exam',
            name='moderation_active',
            field=models.BooleanField(default=False, help_text='Allow access to moderation interface.'),
        ),
        migrations.AlterField(
            model_name='examaction',
            name='action',
            field=models.CharField(max_length=2, choices=[('T', 'Translation submission'), ('P', 'Points submission')]),
        ),
        migrations.AlterField(
            model_name='examaction',
            name='status',
            field=models.CharField(max_length=1, default='O', choices=[('O', 'In progress'), ('S', 'Submitted')]),
        ),
        migrations.AlterField(
            model_name='feedback',
            name='status',
            field=models.CharField(max_length=1, default='S', choices=[('S', 'Submitted'), ('V', 'Scheduled for voting'), ('I', 'Implemented'), ('T', 'Settle')]),
        ),
        migrations.AlterField(
            model_name='language',
            name='direction',
            field=models.CharField(max_length=3, default='ltr', choices=[('ltr', 'Left-to-right'), ('rtl', 'Right-to-left')]),
        ),
        migrations.AlterField(
            model_name='language',
            name='font',
            field=models.CharField(max_length=100, default='notosans', choices=[('blotus', 'BLotus'), ('broya', 'BRoya'), ('iskpota', 'Iskoola Pota'), ('khmeros', 'Khmer OS'), ('notokufiarabic', 'Noto Kufi Arabic'), ('notonaskharabic', 'Noto Naskh Arabic'), ('notonaskharabicui', 'Noto Naskh Arabic UI'), ('notonastaliqurdu', 'Noto Nastaliq Urdu'), ('notonastaliqurdudraft', 'Noto Nastaliq Urdu Draft'), ('notosans', 'Noto Sans'), ('notosansarmenian', 'Noto Sans Armenian'), ('notosansavestan', 'Noto Sans Avestan'), ('notosansbalinese', 'Noto Sans Balinese'), ('notosansbamum', 'Noto Sans Bamum'), ('notosansbatak', 'Noto Sans Batak'), ('notosansbengali', 'Noto Sans Bengali'), ('notosansbengaliui', 'Noto Sans Bengali UI'), ('notosansbrahmi', 'Noto Sans Brahmi'), ('notosansbuginese', 'Noto Sans Buginese'), ('notosansbuhid', 'Noto Sans Buhid'), ('notosanscanadianaboriginal', 'Noto Sans Canadian Aboriginal'), ('notosanscarian', 'Noto Sans Carian'), ('notosanscham', 'Noto Sans Cham'), ('notosanscherokee', 'Noto Sans Cherokee'), ('notosanscoptic', 'Noto Sans Coptic'), ('notosanscuneiform', 'Noto Sans Cuneiform'), ('notosanscypriot', 'Noto Sans Cypriot'), ('notosansdeseret', 'Noto Sans Deseret'), ('notosansdevanagari', 'Noto Sans Devanagari'), ('notosansdevanagariui', 'Noto Sans Devanagari UI'), ('notosansegyptianhieroglyphs', 'Noto Sans Egyptian Hieroglyphs'), ('notosansethiopic', 'Noto Sans Ethiopic'), ('notosansgeorgian', 'Noto Sans Georgian'), ('notosansgothic', 'Noto Sans Gothic'), ('notosansgujarati', 'Noto Sans Gujarati'), ('notosansgujaratiui', 'Noto Sans Gujarati UI'), ('notosansgurmukhi', 'Noto Sans Gurmukhi'), ('notosansgurmukhiui', 'Noto Sans Gurmukhi UI'), ('notosanshanunoo', 'Noto Sans Hanunoo'), ('notosanshebrew', 'Noto Sans Hebrew'), ('notosansimperialaramaic', 'Noto Sans Imperial Aramaic'), ('notosansinscriptionalpahlavi', 'Noto Sans Inscriptional Pahlavi'), ('notosansinscriptionalparthian', 'Noto Sans Inscriptional Parthian'), ('notosansjapanese', 'Noto Sans Japanese'), ('notosansjavanese', 'Noto Sans Javanese'), ('notosansjp', 'Noto Sans JP'), ('notosanskaithi', 'Noto Sans Kaithi'), ('notosanskannada', 'Noto Sans Kannada'), ('notosanskannadaui', 'Noto Sans Kannada UI'), ('notosanskayahli', 'Noto Sans Kayah Li'), ('notosanskharoshthi', 'Noto Sans Kharoshthi'), ('notosanskhmer', 'Noto Sans Khmer'), ('notosanskhmerui', 'Noto Sans Khmer UI'), ('notosanskr', 'Noto Sans KR'), ('notosanskufiarabic', 'Noto Sans Kufi Arabic'), ('notosanslao', 'Noto Sans Lao'), ('notosanslaoui', 'Noto Sans Lao UI'), ('notosanslepcha', 'Noto Sans Lepcha'), ('notosanslimbu', 'Noto Sans Limbu'), ('notosanslinearb', 'Noto Sans Linear B'), ('notosanslisu', 'Noto Sans Lisu'), ('notosanslycian', 'Noto Sans Lycian'), ('notosanslydian', 'Noto Sans Lydian'), ('notosansmalayalam', 'Noto Sans Malayalam'), ('notosansmalayalamui', 'Noto Sans Malayalam UI'), ('notosansmandaic', 'Noto Sans Mandaic'), ('notosansmeeteimayek', 'Noto Sans Meetei Mayek'), ('notosansmongolian', 'Noto Sans Mongolian'), ('notosansmyanmar', 'Noto Sans Myanmar'), ('notosansmyanmarui', 'Noto Sans Myanmar UI'), ('notosansnewtailue', 'Noto Sans New Tai Lue'), ('notosansogham', 'Noto Sans Ogham'), ('notosansolchiki', 'Noto Sans Ol Chiki'), ('notosansolditalic', 'Noto Sans Old Italic'), ('notosansoldpersian', 'Noto Sans Old Persian'), ('notosansoldsoutharabian', 'Noto Sans Old South Arabian'), ('notosansoldturkic', 'Noto Sans Old Turkic'), ('notosansoriya', 'Noto Sans Oriya'), ('notosansoriyaui', 'Noto Sans Oriya UI'), ('notosansosmanya', 'Noto Sans Osmanya'), ('notosansphagspa', 'Noto Sans Phags Pa'), ('notosansphoenician', 'Noto Sans Phoenician'), ('notosansrejang', 'Noto Sans Rejang'), ('notosansrunic', 'Noto Sans Runic'), ('notosanssamaritan', 'Noto Sans Samaritan'), ('notosanssaurashtra', 'Noto Sans Saurashtra'), ('notosanssc', 'Noto Sans SC'), ('notosansshavian', 'Noto Sans Shavian'), ('notosanssinhala', 'Noto Sans Sinhala'), ('notosanssundanese', 'Noto Sans Sundanese'), ('notosanssylotinagri', 'Noto Sans Syloti Nagri'), ('notosanssyriaceastern', 'Noto Sans Syriac Eastern'), ('notosanssyriacestrangela', 'Noto Sans Syriac Estrangela'), ('notosanssyriacwestern', 'Noto Sans Syriac Western'), ('notosanstagalog', 'Noto Sans Tagalog'), ('notosanstagbanwa', 'Noto Sans Tagbanwa'), ('notosanstaile', 'Noto Sans Tai Le'), ('notosanstaitham', 'Noto Sans Tai Tham'), ('notosanstaiviet', 'Noto Sans Tai Viet'), ('notosanstamil', 'Noto Sans Tamil'), ('notosanstamilui', 'Noto Sans Tamil UI'), ('notosanstc', 'Noto Sans TC'), ('notosanstelugu', 'Noto Sans Telugu'), ('notosansteluguui', 'Noto Sans Telugu UI'), ('notosansthaana', 'Noto Sans Thaana'), ('notosansthai', 'Noto Sans Thai'), ('notosansthaiui', 'Noto Sans Thai UI'), ('notosanstibetan', 'Noto Sans Tibetan'), ('notosanstifinagh', 'Noto Sans Tifinagh'), ('notosansugaritic', 'Noto Sans Ugaritic'), ('notosansvai', 'Noto Sans Vai'), ('notosansyi', 'Noto Sans Yi'), ('notoserif', 'Noto Serif'), ('notoserifarmenian', 'Noto Serif Armenian'), ('notoserifgeorgian', 'Noto Serif Georgian'), ('notoseriflao', 'Noto Serif Lao'), ('notoserifthai', 'Noto Serif Thai'), ('thsarabun', 'THSarabun')]),
        ),
        migrations.AlterField(
            model_name='language',
            name='polyglossia',
            field=models.CharField(max_length=100, default='english', choices=[('albanian', 'Albanian'), ('amharic', 'Amharic'), ('arabic', 'Arabic'), ('armenian', 'Armenian'), ('asturian', 'Asturian'), ('bahasai', 'Bahasai'), ('bahasam', 'Bahasam'), ('basque', 'Basque'), ('bengali', 'Bengali'), ('brazilian', 'Brazilian'), ('breton', 'Breton'), ('bulgarian', 'Bulgarian'), ('catalan', 'Catalan'), ('coptic', 'Coptic'), ('croatian', 'Croatian'), ('czech', 'Czech'), ('danish', 'Danish'), ('divehi', 'Divehi'), ('dutch', 'Dutch'), ('english', 'English'), ('esperanto', 'Esperanto'), ('estonian', 'Estonian'), ('farsi', 'Farsi'), ('finnish', 'Finnish'), ('french', 'French'), ('friulan', 'Friulan'), ('galician', 'Galician'), ('german', 'German'), ('greek', 'Greek'), ('hebrew', 'Hebrew'), ('hindi', 'Hindi'), ('icelandic', 'Icelandic'), ('interlingua', 'Interlingua'), ('irish', 'Irish'), ('italian', 'Italian'), ('kannada', 'Kannada'), ('lao', 'Lao'), ('latin', 'Latin'), ('latvian', 'Latvian'), ('lithuanian', 'Lithuanian'), ('lsorbian', 'Lsorbian'), ('magyar', 'Magyar'), ('malayalam', 'Malayalam'), ('marathi', 'Marathi'), ('nko', 'Nko'), ('norsk', 'Norsk'), ('nynorsk', 'Nynorsk'), ('occitan', 'Occitan'), ('piedmontese', 'Piedmontese'), ('polish', 'Polish'), ('portuges', 'Portuges'), ('romanian', 'Romanian'), ('romansh', 'Romansh'), ('russian', 'Russian'), ('samin', 'Samin'), ('sanskrit', 'Sanskrit'), ('scottish', 'Scottish'), ('serbian', 'Serbian'), ('slovak', 'Slovak'), ('slovenian', 'Slovenian'), ('spanish', 'Spanish'), ('swedish', 'Swedish'), ('syriac', 'Syriac'), ('tamil', 'Tamil'), ('telugu', 'Telugu'), ('thai', 'Thai'), ('tibetan', 'Tibetan'), ('turkish', 'Turkish'), ('turkmen', 'Turkmen'), ('ukrainian', 'Ukrainian'), ('urdu', 'Urdu'), ('usorbian', 'Usorbian'), ('vietnamese', 'Vietnamese'), ('welsh', 'Welsh'), ('custom', 'Other')]),
        ),
        migrations.AlterField(
            model_name='like',
            name='status',
            field=models.CharField(max_length=1, choices=[('L', 'Liked'), ('U', 'Unliked')]),
        ),
        migrations.AlterField(
            model_name='pdfnode',
            name='status',
            field=models.CharField(max_length=1, default='O', choices=[('O', 'In progress'), ('L', 'Locked'), ('S', 'Submitted')]),
        ),
        migrations.AlterField(
            model_name='printlog',
            name='type',
            field=models.CharField(max_length=1, choices=[('P', 'Printout'), ('S', 'Scan')]),
        ),
        migrations.AlterField(
            model_name='question',
            name='code',
            field=models.CharField(max_length=8, help_text='e.g. Q for Question, A for Answer Sheet, G for General Instruction'),
        ),
        migrations.AlterField(
            model_name='question',
            name='feedback_active',
            field=models.BooleanField(default=False, help_text='Are feedbacks allowed?'),
        ),
        migrations.AlterField(
            model_name='question',
            name='position',
            field=models.PositiveSmallIntegerField(help_text='Sorting index inside one exam'),
        ),
        migrations.AlterField(
            model_name='question',
            name='type',
            field=models.PositiveSmallIntegerField(default=0, choices=[(0, 'Question'), (1, 'Answer')]),
        ),
        migrations.AlterField(
            model_name='question',
            name='working_pages',
            field=models.PositiveSmallIntegerField(default=0, help_text='How many pages for working sheets'),
        ),
        migrations.AlterField(
            model_name='studentsubmission',
            name='with_answer',
            field=models.BooleanField(default=False, help_text='Deliver also answer sheet.'),
        ),
        migrations.AlterField(
            model_name='translationnode',
            name='status',
            field=models.CharField(max_length=1, default='O', choices=[('O', 'In progress'), ('L', 'Locked'), ('S', 'Submitted')]),
        ),
        migrations.AlterField(
            model_name='versionnode',
            name='status',
            field=models.CharField(max_length=1, choices=[('P', 'Proposal'), ('S', 'Staged'), ('C', 'Confirmed')]),
        ),
        migrations.AlterField(
            model_name='versionnode',
            name='tag',
            field=models.CharField(max_length=100, blank=True, null=True, help_text='leave empty to show no tag'),
        ),
    ]
