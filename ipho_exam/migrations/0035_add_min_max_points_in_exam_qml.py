# Generated by Django 4.1.8 on 2023-07-13 19:46

from django.db import migrations, models
from ipho_exam.models import VersionNode
from ipho_exam.qml import make_qml, xml2string

def add_min_max_points_node(node):
    if node.tag in ['question', 'subquestion', 'subanswer', 'part']:
        if 'min_points' not in node.attributes:
            node.attributes['min_points']='0.0'
        if 'max_points' not in node.attributes:
            node.attributes['max_points']=node.attributes.get('points', '0.0')
        if 'points' in node.attributes:
            node.attributes['max_points']=node.attributes.get('points', '0.0')
            node.attributes.pop('points')

    if node.has_children:
        for child in node.children:
            add_min_max_points_node(child)

def add_min_max_points_in_exam_qml(apps, schema_editor):
    version_nodes=VersionNode.objects.all()
    for version_node in version_nodes:
        qml=make_qml(version_node)
        add_min_max_points_node(qml)
        version_node.text = xml2string(qml.make_xml())
        version_node.save()

class Migration(migrations.Migration):

    dependencies = [
        ('ipho_exam', '0034_exam_can_publish_exam_can_submit'),
    ]

    operations = [
        migrations.RunPython(add_min_max_points_in_exam_qml),
    ]
