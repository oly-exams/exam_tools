#!/usr/bin/env python
# Author:  Mario S. KÃ¶nz <mskoenz@gmx.net>

import sys
import collections
from pathlib import Path
from contextlib import redirect_stdout

import docker

path = Path(__file__).resolve().parent


def print_dockerfile_squash(service_name):
    client = docker.from_env()
    api = client.api
    insp = api.inspect_image(service_name)

    config = insp["Config"]
    mapping = collections.OrderedDict(
        [
            ("Env", "ENV"),
            ("User", "USER"),
            ("WorkingDir", "WORKDIR"),
            ("Entrypoint", "ENTRYPOINT"),
            ("Cmd", "CMD"),
        ]
    )

    print(f"# automatically generated by {Path(__file__).name}")
    print("FROM scratch")
    print(f"COPY --from={service_name} / /")

    for ckey, key in mapping.items():
        val = config[ckey]
        if ckey == "Entrypoint" and val is None:
            val = "[]"
        if ckey == "Env":
            val = " ".join(val)
        print(key, val)


def main():
    service_name = sys.argv[1]
    filepath = path / service_name / "Dockerfile_squash"
    with filepath.open("w") as f:
        with redirect_stdout(f):
            print_dockerfile_squash(service_name)


if __name__ == "__main__":
    main()
